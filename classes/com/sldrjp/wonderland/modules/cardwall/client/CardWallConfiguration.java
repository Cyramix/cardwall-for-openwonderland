/*
 * Copyright 2010, 2011  Service de logiciel et developpement R.J. Potter (Robert J Potter)
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CardWallConfiguration.java
 *
 * Created on 13-Mar-2011, 3:58:21 PM
 */

package com.sldrjp.wonderland.modules.cardwall.client;

import com.sldrjp.wonderland.modules.cardwall.common.cell.CardWallCellClientState;
import com.sldrjp.wonderland.modules.cardwall.common.cell.CardWallSectionCellClientState;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.logging.Logger;

/**
 * @author Bob
 */
public class CardWallConfiguration extends javax.swing.JDialog {
    CardWallCellClientState state = null;
    CardWallCellClientState newState = null;

    /**
     * Creates new form CardWallConfiguration
     */
    private static final Logger logger = Logger.getLogger(CardWallConfiguration.class.getName());
    TableColumn sectionNumberColumn = new TableColumn();
    TableColumn sectionTitleColumn = new TableColumn();
    TableColumn sectionNoOfColumnsColumn = new TableColumn();

    public CardWallConfiguration(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public void setCardWallState(CardWallCellClientState state) {
        this.state = state;
        noOfRowsText.setText(Integer.toString(state.getNumberOfRows()));
        noOfRows = state.getNumberOfRows();
        noOfColumnsText.setText(Integer.toString(state.getNumberOfColumns()));
        noOfColumns = state.getNumberOfColumns();
        List<CardWallSectionCellClientState> sectionStates = state.getSectionStates();
        noOfSectionsText.setText(Integer.toString(sectionStates.size()));
        noOfSections = sectionStates.size();


//        sectionTable.addColumn(sectionNumberColumn);
//        sectionNumberColumn.setHeaderValue("Section");
//        sectionNumberColumn.setWidth(50);
//
//        sectionTable.addColumn(sectionTitleColumn);
//        sectionTitleColumn.setHeaderValue("Title");
//        sectionTitleColumn.setWidth(1000);
//
//        sectionTable.addColumn(sectionNoOfColumnsColumn);
//        sectionNoOfColumnsColumn.setHeaderValue("Columns");
//        sectionNoOfColumnsColumn.setWidth(50);
        DefaultTableModel model = (DefaultTableModel)sectionTable.getModel();
        model.addColumn("Section");
        model.addColumn("Title");
        model.addColumn("Columns");

        int i = 0;
        for (CardWallSectionCellClientState sectionState : sectionStates) {
            String row[] = new String[3];
            row[0] = Integer.toString(i);
            row[1] = sectionState.getSectionTitle();
            row[2] = Integer.toString(sectionState.getEndColumn() - sectionState.getStartColumn()+1);

            model.addRow(row);
            i++;

//            sectionTable.getModel().setValueAt(i, i, 0);
//            sectionTable.getModel().setValueAt(sectionState.getSectionTitle(), i, 1);
//            sectionTable.getModel().setValueAt(sectionState.getEndColumn() - sectionState.getStartColumn(), i, 3);
        }


    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox2 = new javax.swing.JCheckBox();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sectionTable = new javax.swing.JTable();
        noOfColumnsText = new javax.swing.JTextField();
        noOfRowsText = new javax.swing.JTextField();
        jRadioButton2 = new javax.swing.JRadioButton();
        noOfSectionsText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();

        jCheckBox2.setText("jCheckBox2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Number of Rows");

        jLabel2.setText("Number of Columns");

        jLabel3.setText("Number of Sections");

        sectionTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{}
        ));
        jScrollPane1.setViewportView(sectionTable);

        noOfColumnsText.setText("");

        noOfRowsText.setText("");

        jRadioButton2.setText("Note Model");

        noOfSectionsText.setText("");
        noOfSectionsText.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt){
                numberOfSectionsEdit(evt);
            }
        });

        jLabel4.setText("Card Style");

        jRadioButton1.setText("Agile Model");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel4)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jRadioButton1)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jRadioButton2))))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel1))
                                                .addGap(29, 29, 29)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(noOfColumnsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(noOfSectionsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(noOfRowsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addGap(11, 11, 11)
                                                .addComponent(noOfRowsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(noOfColumnsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel3)
                                                        .addComponent(noOfSectionsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jRadioButton1)
                                        .addComponent(jRadioButton2))
                                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(277, 277, 277)
                                .addComponent(okButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cancelButton))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cancelButton)
                                        .addComponent(okButton))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        newState = new CardWallCellClientState();
        int temp;
        temp = Integer.parseInt(noOfRowsText.getText());
        if (state.getNumberOfRows() != temp) {
            newState.setNumberOfRows(temp);
            noOfRows = temp;
            changesMade = true;
        } else {
            newState.setNumberOfRows(state.getNumberOfRows());
        }
        temp = Integer.parseInt(noOfColumnsText.getText());
        if (state.getNumberOfColumns() != temp) {
            newState.setNumberOfColumns(temp);
            noOfColumns = temp;
            changesMade = true;
        } else {
            newState.setNumberOfColumns(state.getNumberOfColumns());
        }
        temp = Integer.parseInt(noOfSectionsText.getText());
        if (state.getSectionStates().size() != temp) {
            noOfSections = temp;
            changesMade = true;
        } else {
            noOfSections = -1;
            // check to see if any of the sections changed
            List <CardWallSectionCellClientState> sections = state.getSectionStates();
                 DefaultTableModel model = (DefaultTableModel)sectionTable.getModel();
            for (int i=0; i < sections.size(); i++ ){
                CardWallSectionCellClientState section = sections.get(i);
//                Section workingSection = new Section(model.getValueAt(i,0)
//
//               if (section.getStartColumn() != )
            }
        }



        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        changesMade = false;
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

      private void numberOfSectionsEdit(java.awt.event.ActionEvent evt) {
         logger.fine("numberOfSectionsEdit " + noOfSectionsText.getText());
          if (noOfSections < Integer.valueOf(noOfSectionsText.getText())) {
              int newNoOfSections =  Integer.valueOf(noOfSectionsText.getText());
              String row[] = new String[] {"","",""};
              ((DefaultTableModel) sectionTable.getModel()).addRow(row);
          }
      }


    /**
     *
     *
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CardWallConfiguration dialog = new CardWallConfiguration(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton okButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable sectionTable;
    private javax.swing.JTextField noOfRowsText;
    private int noOfRows;
    private javax.swing.JTextField noOfColumnsText;
    private int noOfColumns;
    private javax.swing.JTextField noOfSectionsText;
    private int noOfSections;
    // End of variables declaration//GEN-END:variables

    private boolean changesMade = false;

    public boolean isDirty() {
        return changesMade;
    }

    public CardWallCellClientState getNewState() {
        return newState;
    }
}
